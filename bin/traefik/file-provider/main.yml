# http routing section
http:
  routers:
    # Define a connection between requests and services
    to-traefik:
      priority: 2
      service: traefik
      rule: PathPrefix(`/traefik/`) || PathPrefix(`/api/`) || HeadersRegexp(`Referer`, `.*\/traefik\/.*`)
      middlewares:
        - "stripPrefix-traefik"
        # - "replacePath-traefik"
    to-ipfs-ui:
      priority: 1
      service: ipfs-ui
      # rule: "PathPrefix(`/ipfs/webui`)"
      rule: PathPrefix(`/ipfs-ui/`) || PathPrefix(`/ipfs/`) || PathPrefix(`/api/`) || HeadersRegexp(`Referer`, `.*\/ipfs-ui\/.*`)
      middlewares:
        - "stripPrefix-ipfs-ui"
       # If the rule matches, applies the middleware
      # middlewares:
      # - test-user
      # If the rule matches, forward to the whoami service (declared below)
    to-code-server:
      priority: 0
      service: code-server
      rule: PathPrefix(`/code-server/`) || HeadersRegexp(`Referer`, `.*\/code-server\/.*`)
      middlewares:
        - "stripPrefix-code-server"
        # - "replacePath-traefik"
    to-vscode:
      priority: 0
      service: vscode
      rule: PathPrefix(`/vscode/`) || HeadersRegexp(`Referer`, `.*\/vscode\/.*`)
      middlewares:
        - "stripPrefix-vscode"
        # - "replacePath-traefik"
  
  middlewares:
    stripPrefix-traefik:
      stripPrefix:
        prefixes: 
        - "/traefik"
    stripPrefix-ipfs-ui:
      stripPrefix:
        prefixes: 
        - "/ipfs-ui"
    stripPrefix-code-server:
      stripPrefix:
        prefixes: 
        - "/code-server"
    stripPrefix-code-server:
      stripPrefix:
        prefixes: 
        - "/vscode"
    # replacePath-traefik:
    #   replacePath:
    #     path: "/dashboard"
    # replacePath-ipfs-ui:
    #   replacePath:
    #     path: "/webui"


  # middlewares:
  #   # Define an authentication mechanism
  #   test-user:
  #     basicAuth:
  #       users:
  #       - test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/

  services:
    # Define how to reach an existing service on our infrastructure
    ipfs-ui:
      loadBalancer:
        servers:
        - url: http://ipfs:5001
    traefik:
      loadBalancer:
        servers:
        - url: http://traefik:8080
    code-server:
      loadBalancer:
        servers:
        - url: http://code-server:8080
    vscode:
      loadBalancer:
        servers:
        - url: http://vscode:8080

tcp:
  routers:
    nrepl:
      # won't listen to entry point web
      entryPoints:
        - nrepl
      rule: "HostSNI(`*`)"
      service: app
      # will route TLS requests (and ignore non tls requests)
      # tls: {}

  services:
    app:
      loadBalancer:
        servers:
        - address: app:7788