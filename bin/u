#!/bin/bash

clean(){
    rm -rf resources/public/js-out out
}

purge(){
    clean
    rm -rf  .shadow-cljs .cpcache 
}

shadow(){
    ./node_modules/.bin/shadow-cljs "$@"
}

server(){
    shadow -A:ui:cljs-dev server
    # yarn server
}

dev(){

    # npm i
    # shadow -A:cljs-dev:ui:peer watch \
    # :ui :peer

    npm i
    shadow -A:cljs-dev:peer watch \
    :peer

}

tree(){
    clojure -A:cljs-dev:peer -Stree
}

compile(){
    npm i
    shadow -A:ui:cljs-dev compile  :ui
}

cljs_compile_peer(){
    clj -A:cljs-dev:peer -m cljs.main -co cljs-build-peer.edn -c
}

cljs_compile_tab_scenario(){
    clj -A:ui:cljs-dev -m cljs.main -co build-tab-scenario.edn -v -c # -r
}

fwm(){
    clojure -A:ui:cljs-dev \
    -m nrepl.cmdline  \
    --middleware "[cider.nrepl/cider-middleware cider.piggieback/wrap-cljs-repl]" \
    --bind "0.0.0.0" --port 5100
}

"$@"