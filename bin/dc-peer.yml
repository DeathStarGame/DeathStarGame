version: "3.8"

networks:
  main-network:
    driver: overlay
    name: tiefighter-peer${TIEFIGHTER_PEER_INDEX}
  ipfs-network:
    driver: bridge
    name: tiefighter-ipfs

volumes:
  ctx:
    driver: local
    driver_opts:
      type: none
      device: ../../
      o: bind
  dgraph-volume:
    name: tiefighter-dgraph-peer${TIEFIGHTER_PEER_INDEX}
  ipfs-volume:
    name: tiefighter-ipfs-peer${TIEFIGHTER_PEER_INDEX}

services:

  peer:
    image: tiefighter.peer
    build:
      context: ./peer
      dockerfile: ./Dockerfile
      args:
        workdir:  /ctx/tie-fighter/bin/peer
    command: tail -f /dev/null
    # command: bash f dev
    ports:
      - ${TIEFIGHTER_REPL_PORT}:7781
      - ${TIEFIGHTER_HTTP_PORT}:3080
    networks:
      main-network:
    volumes:
      - ./peer/.peer${TIEFIGHTER_PEER_INDEX}:/root
      - type: volume
        source: ctx
        target: /ctx
        volume:
          nocopy: true
    stdin_open: true
    tty: true
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4096M

  zero:
    image: dgraph/dgraph:latest
    volumes:
      - dgraph-volume:/dgraph
    networks:
      main-network:
    # ports:
    #   - 5080:5080
    #   - 6080:6080
    restart: on-failure
    command: dgraph zero --my=zero:5080
  
  alpha:
    image: dgraph/dgraph:latest
    volumes:
      - dgraph-volume:/dgraph
    networks:
      main-network:
    # ports:
    #   - 8080:8080
    #   - 9080:9080
    restart: on-failure
    command: dgraph alpha --my=alpha:7080 --zero=zero:5080
  
  ratel:
    image: dgraph/dgraph:latest
    networks:
      main-network:
    ports:
      - 800${TIEFIGHTER_PEER_INDEX}:8000
    command: dgraph-ratel

  ipfs:
    image: tiefighter.ipfs
    build:
      context: ./ipfs
      dockerfile: ./Dockerfile
    ports:
      - 430${TIEFIGHTER_PEER_INDEX}:4001
      - 530${TIEFIGHTER_PEER_INDEX}:5001
      - 830${TIEFIGHTER_PEER_INDEX}:8080
      - 838${TIEFIGHTER_PEER_INDEX}:8081
      # - 4001:4001
    #   - 127.0.0.1:5001:5001
    #   # - 127.0.0.1:8080:8080
    #   # - 127.0.0.1:8081:8081
    environment:
      # - IPFS_PROFILE=server
      # - IPFS_PROFILE=local-discovery
      - IPFS_PATH=/data/ipfs
    networks:
      main-network:
      ipfs-network:
        aliases:
          - ipfs${TIEFIGHTER_PEER_INDEX}
    volumes:
      - type: volume
        source: ctx
        target: /ctx
        volume:
          nocopy: true
      - type: volume
        source: ipfs-volume
        target: /data/ipfs
        volume:
          nocopy: true
      # - type: volume
      #   source: ipfs-export
      #   target: /export
      #   volume:
      #     nocopy: true