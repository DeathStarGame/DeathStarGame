version: "3.8"

networks:
  network:
    name: ${NETWORK}

volumes:
  # source:
  #   name: ${VOLUME1_SOURCE}
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: ../
  #     # device: $PWD/${WEB_APP_PATH}
  #     o: bind
  source:
    name: ${VOLUME_SOURCE}
  db:
    name: ${VOLUME_DB}

services:

  source:
    image: deathstar.source
    build:
      context: ./source
      dockerfile: ./Dockerfile
      args:
        workdir: /ctx
    volumes:
      - type: volume
        source: source
        target: /ctx/DeathStarGame
        volume:
          nocopy: false
    networks:
      - network

  source:
    image: ubuntu:20.04
    networks:
      - network

  # traefik:
  #   # The official v2 Traefik docker image
  #   image: traefik:v2.3.2
  #   # Enables the web UI and tells Traefik to listen to docker
  #   command: --api.insecure=true --providers.docker
  #   ports:
  #     # The HTTP port
  #     - "80:80"
  #     # The Web UI (enabled by --api.insecure=true)
  #     - "8080:8080"
  #   networks:
  #     - network
  #   volumes:
  #     # So that Traefik can listen to the Docker events
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     # - ./traefik/traefik.toml:/etc/traefik/traefik.toml

  # ipfs-node:
  #   image: ipfs/go-ipfs:latest
  #   expose:
  #     - 4001
  #     - 8080

  app:
    image: deathstar.app
    volumes:
      - type: volume
        source: source
        target: /ctx/DeathStarGame
        volume:
          nocopy: true
    build:
      context: ./app
      dockerfile: ./dev.Dockerfile
      args:
        # workdir: /ctx/DeathStarGame/bin/app
        workdir: /ctx
    command: tail -f /dev/null
    # command: bash f dev
    depends_on:
      - source
    ports:
      - 7788:7788
      - 8080:8080
    networks:
      - network
    stdin_open: true
    tty: true
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 4096M

  # vscode:
  #   image: codercom/code-server:latest
  #   expose:
  #     - 8080
  #   command: --auth none

  # cljs-compiler:
  #   image: deathstar.cljs-compiler
  #   volumes:
  #     - ./ui/.user:/root
  #     - ./ui:/ctx/bin/ui
  #     - ../src:/ctx/src
  #   build:
  #     context: ./ui
  #     dockerfile: ./dev.Dockerfile
  #     args:
  #       workdir: /ctx/bin/ui
  #   command: tail -f /dev/null
  #   # command: bash f dev
  #   ports:
  #     - 8899:8899
  #     - 9630:9630
  #     - 9500:9500
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 4096M

  # game-ui:
  #   image: deathstar.game-ui
  #   expose:
  #     - 80
  #   stdin_open: true
  #   tty: true
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '4'
  #         memory: 4096M

